version: '2'

vars:
  GIT_COMMIT: { sh: git rev-parse HEAD }

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

tasks:
  build:
    desc: Build the go binary.
    deps: [build:api]

  build:api:
    desc: Build the api binary.
    cmds:
      - go build -ldflags "-X main.commit={{.GIT_COMMIT}}" -o bin/bibliotheca -i cmd/bibliotheca/main.go

  build:container:
    desc: Build the application containers.
    cmds:
      - docker build -f build/Dockerfile --target app       --tag "bibliotheca-go:app-$TAG" .
      - docker build -f build/Dockerfile --target migration --tag "bibliotheca-go:migration-$TAG" .
    env:
      TAG: "{{default .GIT_COMMIT .TAG}}"

  install-tools:
    desc: Install the tools.
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.23.6

  test:
    desc: Test the all go codes.
    cmds:
      - go test ./...

  lint:
    desc: Lint the all go codes.
    silent: true
    cmds:
      - ./bin/golangci-lint run

  lint:fix:
    desc: Fix the linter reported codes if possible.
    silent: true
    cmds:
      - ./bin/golangci-lint run --fix

  migrate:up:
    desc: Apply all migrations to the db.
    cmds:
      - docker-compose run --rm migrate up

  migrate:add:
    desc: Add new migration files.
    cmds:
      - docker-compose run --rm migrate create -ext sql -dir ./scripts/migrations {{.NAME}}

  setup:
    desc: Initial setup.
    deps: [dc:build]

  setup:db:
    desc: Setup the db.
    deps: [dc:build]
    cmds:
      - docker-compose up -d db
      - sleep 3
      - task: migrate:up

  dc:up:
    desc: Run the application in docker containers.
    deps: [dc:build]
    cmds:
      - docker-compose up -d db api

  dc:build:
    desc: Build the docker-compose's containers.
    cmds:
      - docker-compose build

  dc:psql:
    desc: Use psql in docker container.
    cmds:
      - docker-compose run --rm psql

  dc:show-db-connection-string:
    desc: Show the db connection string.
    silent: true
    cmds:
      - echo "{{.DB_CONN_STR}}" | sed 's/db:5432/127.0.0.1:{{.DB_PORT}}/'
    vars:
      DB_PORT:
        sh: 'docker-compose port db 5432 | cut -d: -f2'
      DB_CONN_STR:
        sh: docker-compose run --rm shell bash -c 'echo "$APP_DB_URL"'
