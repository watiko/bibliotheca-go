version: '2'

vars:
  GIT_COMMIT: { sh: git rev-parse --short HEAD }

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

tasks:
  build:
    desc: Build the go binary.
    deps: [build:api]

  build:api:
    desc: Build the api binary.
    cmds:
      - go build -o bin/bibliotheca -i cmd/bibliotheca/main.go

  build:container:
    desc: Build the application containers.
    cmds:
      - docker build -f build/Dockerfile --target app       --tag "bibliotheca-go:app-$TAG" .
      - docker build -f build/Dockerfile --target migration --tag "bibliotheca-go:migration-$TAG" .
    env:
      TAG: "{{default .GIT_COMMIT .TAG}}"

  test:
    desc: Test the all go codes.
    cmds:
      - go test ./...

  fmt:
    desc: Format the all go codes.
    cmds:
      - go fmt ./...

  migrate:up:
    desc: Apply all migrations to the db.
    cmds:
      - docker-compose run --rm migrate up

  migrate:add:
    desc: Add new migration files.
    cmds:
      - docker-compose run --rm migrate create -ext sql -dir ./scripts/migrations {{.NAME}}

  setup:
    desc: Initial setup.
    deps: [dc:build]

  setup:db:
    desc: Setup the db.
    deps: [dc:build]
    cmds:
      - docker-compose up -d db
      - sleep 3
      - task: migrate:up

  dc:up:
    desc: Run the application in docker containers.
    deps: [dc:build]
    cmds:
      - docker-compose up -d db api

  dc:build:
    desc: Build the docker-compose's containers.
    cmds:
      - docker-compose build
